[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Quarto Basics",
    "section": "",
    "text": "For a demonstration of the capability of Quarto.\n\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.datasets import load_iris\n\n\n\n\nTableÂ 1 presents data on Iris dataset. All length and width are in centimeter (cm).\n\n\nCode\niris = load_iris()\ndf = pd.DataFrame(data=iris.data, columns=iris.feature_names)\n\ntarget = pd.Series(iris.target)\ndf[\"target\"] = target.apply(lambda x, y: y[x], args=(iris.target_names,))\n\ncolumn_names = {c: c.replace(\" (cm)\", \"\") for c in df.columns}\ndf = df.rename(columns=column_names)\n\ndf\n\n\n\n\nTableÂ 1: Iris dataset\n\n\n\n\n\n\n\n\n\n\n\nsepal length\nsepal width\npetal length\npetal width\ntarget\n\n\n\n\n0\n5.1\n3.5\n1.4\n0.2\nsetosa\n\n\n1\n4.9\n3.0\n1.4\n0.2\nsetosa\n\n\n2\n4.7\n3.2\n1.3\n0.2\nsetosa\n\n\n3\n4.6\n3.1\n1.5\n0.2\nsetosa\n\n\n4\n5.0\n3.6\n1.4\n0.2\nsetosa\n\n\n...\n...\n...\n...\n...\n...\n\n\n145\n6.7\n3.0\n5.2\n2.3\nvirginica\n\n\n146\n6.3\n2.5\n5.0\n1.9\nvirginica\n\n\n147\n6.5\n3.0\n5.2\n2.0\nvirginica\n\n\n148\n6.2\n3.4\n5.4\n2.3\nvirginica\n\n\n149\n5.9\n3.0\n5.1\n1.8\nvirginica\n\n\n\n\n150 rows Ã— 5 columns\n\n\n\n\n\n\n\n\n\n\nWe will start our EDA process with the distribution of sepal length of each target.\n\n\nCode\ndf.groupby(\"target\")[\"sepal length\"].hist(alpha=0.5, legend=True)\nplt.show()\n\n\n\n\n\n\n\n\nFigureÂ 1: Distribution of sepal lengths\n\n\n\n\n\nWeâ€™ve created FigureÂ 1 ðŸŽŠ. It seems like there is some pattern that can be used to identify whether the given data is setosa, versicolor or virginica.\nIn order to find a generalized model, we need to incorporate multiple aspects of data as possible. Therefore, we have to inspect other features as well. petal length seems to be a good start but does it give us new information? - We can explore this by displaying the relationship between sepal length and petal length.\n\n\nCode\ngrouped_df = df.groupby(\"target\")\n_, axes = plt.subplots(1, 3, figsize=(12, 5), sharey=True, sharex=True)\n\nfor i, (n, g) in enumerate(grouped_df):\n    g.plot(x=\"sepal length\", y=\"petal length\", kind=\"scatter\", ax=axes[i], title=n)\n\n\n\n\n\n\n\n\nFigureÂ 2: Correlation between sepal length and petal length\n\n\n\n\n\nAs shown in FigureÂ 2, there is a linear relationship in versicolor and virginica. Though, this is not much clear for setosa. In addition, in each target group, their petal length and sepal length are in different range especially for petal length. virginica is likely to be the biggest in length and setosa is the smallest one.\nWhat we can conclue that petal length looks like another important feature for modelling. However, when we use both sepal length and petal length, we should be careful of multicollinearity."
  },
  {
    "objectID": "index.html#introduction-to-quarto-report",
    "href": "index.html#introduction-to-quarto-report",
    "title": "Quarto Basics",
    "section": "",
    "text": "For a demonstration of the capability of Quarto.\n\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.datasets import load_iris\n\n\n\n\nTableÂ 1 presents data on Iris dataset. All length and width are in centimeter (cm).\n\n\nCode\niris = load_iris()\ndf = pd.DataFrame(data=iris.data, columns=iris.feature_names)\n\ntarget = pd.Series(iris.target)\ndf[\"target\"] = target.apply(lambda x, y: y[x], args=(iris.target_names,))\n\ncolumn_names = {c: c.replace(\" (cm)\", \"\") for c in df.columns}\ndf = df.rename(columns=column_names)\n\ndf\n\n\n\n\nTableÂ 1: Iris dataset\n\n\n\n\n\n\n\n\n\n\n\nsepal length\nsepal width\npetal length\npetal width\ntarget\n\n\n\n\n0\n5.1\n3.5\n1.4\n0.2\nsetosa\n\n\n1\n4.9\n3.0\n1.4\n0.2\nsetosa\n\n\n2\n4.7\n3.2\n1.3\n0.2\nsetosa\n\n\n3\n4.6\n3.1\n1.5\n0.2\nsetosa\n\n\n4\n5.0\n3.6\n1.4\n0.2\nsetosa\n\n\n...\n...\n...\n...\n...\n...\n\n\n145\n6.7\n3.0\n5.2\n2.3\nvirginica\n\n\n146\n6.3\n2.5\n5.0\n1.9\nvirginica\n\n\n147\n6.5\n3.0\n5.2\n2.0\nvirginica\n\n\n148\n6.2\n3.4\n5.4\n2.3\nvirginica\n\n\n149\n5.9\n3.0\n5.1\n1.8\nvirginica\n\n\n\n\n150 rows Ã— 5 columns\n\n\n\n\n\n\n\n\n\n\nWe will start our EDA process with the distribution of sepal length of each target.\n\n\nCode\ndf.groupby(\"target\")[\"sepal length\"].hist(alpha=0.5, legend=True)\nplt.show()\n\n\n\n\n\n\n\n\nFigureÂ 1: Distribution of sepal lengths\n\n\n\n\n\nWeâ€™ve created FigureÂ 1 ðŸŽŠ. It seems like there is some pattern that can be used to identify whether the given data is setosa, versicolor or virginica.\nIn order to find a generalized model, we need to incorporate multiple aspects of data as possible. Therefore, we have to inspect other features as well. petal length seems to be a good start but does it give us new information? - We can explore this by displaying the relationship between sepal length and petal length.\n\n\nCode\ngrouped_df = df.groupby(\"target\")\n_, axes = plt.subplots(1, 3, figsize=(12, 5), sharey=True, sharex=True)\n\nfor i, (n, g) in enumerate(grouped_df):\n    g.plot(x=\"sepal length\", y=\"petal length\", kind=\"scatter\", ax=axes[i], title=n)\n\n\n\n\n\n\n\n\nFigureÂ 2: Correlation between sepal length and petal length\n\n\n\n\n\nAs shown in FigureÂ 2, there is a linear relationship in versicolor and virginica. Though, this is not much clear for setosa. In addition, in each target group, their petal length and sepal length are in different range especially for petal length. virginica is likely to be the biggest in length and setosa is the smallest one.\nWhat we can conclue that petal length looks like another important feature for modelling. However, when we use both sepal length and petal length, we should be careful of multicollinearity."
  }
]